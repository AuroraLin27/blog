{"remainingRequest":"D:\\Web\\myblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Web\\myblog\\node_modules\\vuepress-plugin-music-bar\\MusicBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Web\\myblog\\node_modules\\vuepress-plugin-music-bar\\MusicBar.vue","mtime":1681915100032},{"path":"D:\\Web\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681915242335},{"path":"D:\\Web\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1681915242405},{"path":"D:\\Web\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681915242335},{"path":"D:\\Web\\myblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1681915242617}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}